<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-06-17T08:19:02+01:00</updated><id>/feed.xml</id><title type="html">CHDD Applied Research Ltd</title><subtitle>CHDD Applied Research Ltd is an independent information security research and  consultancy firm that specialises in the development of tools and techniques  to acquire, analyse and disseminate Cybersecurity threat and vulnerability  information. 
</subtitle><entry><title type="html">SSH Certificate Authorities</title><link href="/ssh-certificate-authorities.html" rel="alternate" type="text/html" title="SSH Certificate Authorities" /><published>2021-05-30T00:00:00+01:00</published><updated>2021-05-30T00:00:00+01:00</updated><id>/ssh-certificate-authorities</id><content type="html" xml:base="/ssh-certificate-authorities.html">&lt;p&gt;Without good key management, no cryptographic system is secure. Full knowledge of the Who, What, When, Where, Why and How of your keys is imperative for good security. Using an SSH Certificate Authority (CA) will vastly simplify and improve the efficacy of SSH infrastructure. You will no longer have default usernames and passwords (root:toor). You will no longer have to copy everyone’s public key into every server while trying to remember whose key is whos. You will no longer be tempted to create “One key to rule them ALL” and give that key to everyone who needs it. Your key management process will be reduced to installing a CA’s public key to each system and signing users public keys.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ssh-certificate-authorities&quot;&gt;SSH Certificate Authorities&lt;/h4&gt;

&lt;p&gt;An SSH CA is simply a special set of public/private key pairs that are used to cryptographically sign user or hosts public keys creating certificates that can be used to authenticate users to hosts, or hosts to users. This mutual authentication scheme can be enforced on both user and hosts systems to provide a greater level of assurance, “to both parties” that they are talking to who they think they are talking to.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ssh-certificates&quot;&gt;SSH Certificates&lt;/h4&gt;

&lt;p&gt;Certificates: user and host. consist of a public key, some identity information, one or more principal (user or host) names and a set of options that are then signed by a Certification Authority (CA) key. These signing options allow for a finer degree of control when granting access. Some of the options are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Certificates can have start and end times, meaning that you can issue in advance and automatically expire when required.&lt;/li&gt;
  &lt;li&gt;Source IP address restrictions, restricting the source address or CIDR allows for access segmentation within larger address ranges.&lt;/li&gt;
  &lt;li&gt;Force command, forcing the execution of command instead of initiating an interactive shell (scripting, automation tasks).&lt;/li&gt;
  &lt;li&gt;Permit or deny port/agent forwarding, permitting/preventing lateral movement within the network.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ssh-key-revocation&quot;&gt;SSH Key Revocation&lt;/h4&gt;

&lt;p&gt;Any key management process must have a key revocation mechanism. SSH uses Key Revocation Lists (KRLs) on each server. While the management of this list is a manual process it is effective at forbidding to use or revoked keys and logging every attempt.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;zero-trust&quot;&gt;Zero Trust&lt;/h4&gt;

&lt;p&gt;While SSH CA’s do not meet all the tenets of a Zero Trust - Access to Resources policy needs, they do meet the core requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Provision for mutual user and hosts authentication&lt;/li&gt;
  &lt;li&gt;Access expiry and revocation&lt;/li&gt;
  &lt;li&gt;Application functionality restrictions&lt;/li&gt;
  &lt;li&gt;Network location restrictions&lt;/li&gt;
  &lt;li&gt;Logging; enough information to build behavioural and environmental attributes for each user.&lt;/li&gt;
  &lt;li&gt;Auditable; the configuration is auditable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;setup&quot;&gt;SETUP&lt;/h3&gt;

&lt;p&gt;To test all of this theory I am going to build and configure four Ubuntu docker containers; three clients alice@heavymessing, bob@justtesting and chloe@tacticalgrace and one server user@lastingdamage. I will create an SSH Certificate Authority, distributes the keys and configure all of the clients and the server, to ONLY trust CA-signed certificates.&lt;/p&gt;

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/a-setup.png&quot; /&gt; 
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;root-vs-user&quot;&gt;Root Vs. User&lt;/h4&gt;

&lt;p&gt;I am using a common user account on the server called “user”, which implies that all users know the user’s password to enable them to gain sudo privileges.  However, you could just as easily use the root account, immediately granting root privileges and bypass the need for any password sharing. The choice is yours.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Create user keys (for each user@host)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-keygen -f /home/user/.ssh/id_rsa 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create user &amp;amp; host CA certificates (root@lastingdamage)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir /root/ca_keys
$ ssh-keygen -f /root/ca_keys/ca_user_key
$ ssh-keygen -f /root/ca_keys/ca_host_key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Signing user’s public keys (root@lastingdamage, for each user@host)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-keygen -s /root/ca_keys/ca_user_key -I user@host -V +30m \
  -O source-address=172.18.0.0/24 \
  -n user /root/public_keys/user-host.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Creates a /root/public_keys/user@host-cert.pub file i.e. a “CA signed” users public key that is valid for 30 minutes and its usage is restricted to 172.18.0.0/24 subnet.&lt;/p&gt;

&lt;p&gt;NOTE: The -V validity interval option “IS” server timezone sensitive!&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ PUBLIC=$(ssh-keygen -L -f /root/public_keys/user@host-cert.pub \
  |grep &quot;Public&quot; |sed -e 's/:/ /g' |sed 's/^[ \t]*//' |sed 's/  / /g' \
  |cut -d&quot; &quot; -f1,5).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;grepping the public keys SHA256 hash&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ SIGNING=$(ssh-keygen -L -f /root/public_keys/user@host-cert.pub \
  |grep &quot;Signing&quot; |sed -e 's/:/ /g' |sed 's/^[ \t]*//' |sed 's/  / /g' \
  |sed -e 's/\(using rsa-sha2-512\)//g' |cut -d&quot; &quot; -f1,5)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;grepping the signing keys SHA256 hash&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo &quot;user@host $PUBLIC $SIGNING&quot; &amp;gt;&amp;gt; /root/public_keys/public_key_index.txt 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The public_key_index.txt file contains a list of all the sign public keys.&lt;/p&gt;

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/07-public_key_index.png&quot; /&gt; 
&lt;/p&gt;

&lt;p&gt;Server (root@lastingdamage)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-keygen -s /root/ca_keys/ca_host_key -I lastingdamage -h \
  -n lastingdamage -V +1d /etc/ssh/ssh_host_rsa_key.pub 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sign servers public key creating /etc/ssh/ssh_host_rsa_key-cert.pub key that is valid for one day.&lt;/p&gt;

&lt;p&gt;NOTE: The -V validity interval option “IS” server timezone sensitive!&lt;/p&gt;

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/d-cert.pub_ca.png&quot; /&gt; 
&lt;/p&gt;

&lt;p&gt;Copy CA’s public key&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cp -fv /root/ca_keys/ca_user_key.pub /etc/ssh/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;configure server /etc/ssh/sshd_config:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PermitRootLogin no
PasswordAuthentication no
PubkeyAuthentication yes
LogLevel VERBOSE
TrustedUserCAKeys /etc/ssh/ca_user_key.pub
HostCertificate /etc/ssh/ssh_host_rsa_key-cert.pub
RevokedKeys /etc/ssh/revoked_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;LogLevel VERBOSE must be used because LogLevel INFO does not log the certificate ID’s or key SHA256 hashes for login attempts that are made with expired certificates.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ touch /etc/ssh/revoked_keys &amp;amp;&amp;amp; chmod 644 /etc/ssh/revoked_keys 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The revoked_keys file MUST exist and be readable (even if empty) otherwise the server will not accept ANY connections.&lt;/p&gt;

&lt;p&gt;Copy signed certificates to ~/.ssh &amp;amp; update known_hosts (for each user@host)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cp -fv /root/public_keys/user@host-cert.pub /home/user/.ssh/id_rsa-cert.pub
$ printf &quot;@cert-authority * &quot; | cat - /root/ca_keys/ca_host_key.pub \
  &amp;gt; /home/user/.ssh/known_hosts 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The user’s known hosts file now contains the CA’s host’s public key, meaning that the ssh client will allow connections to any server presenting this public key.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;tests&quot;&gt;TESTS&lt;/h3&gt;

&lt;p&gt;To gain a level of assurance that the required functionality has been achieved, conducted the following tests.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;1. User Identity&lt;/p&gt;

&lt;div style=&quot;padding-left: 15px;&quot;&gt;
Alice &amp;amp; Bob can login to user@lastingdamage without having someone copy their public keys to .ssh/authorized_keys first (ssh-copy-id) because they are using their signed public keys [name]-cert.pub. 
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;2. Server Identity&lt;/p&gt;

&lt;div style=&quot;padding-left: 15px;&quot;&gt;
Alice &amp;amp; Bob do NOT get prompted with an &quot;unknown host&quot; warning message because the ca_host_key.pub is in their .ssh/known_hosts file
&lt;/div&gt;

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/02-alice_login.png&quot; /&gt; 
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/02-bob_login.png&quot; /&gt; 
&lt;/p&gt;

&lt;p&gt;3. Identity - logging&lt;/p&gt;

&lt;div style=&quot;padding-left: 15px;&quot;&gt;
user@lastingdamage /var/log/auth.log should log individual certificate ID's.. tail -f /var/log/auth.log
&lt;/div&gt;

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/03-alice_login_log.png&quot; /&gt; 
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/03-bob_login_log.png&quot; /&gt; 
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;4. Identity - revocation&lt;/p&gt;

&lt;div style=&quot;padding-left: 15px;&quot;&gt;
Server (root@lastingdamage)
&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-keygen -kf /root/ca_keys/revoked_keys -z $COUNTER bob-justtesting.pub 
$ cp -fv /root/ca_keys/revoked_keys /etc/ssh/
$ chmod 644 /etc/ssh/revoked_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div style=&quot;padding-left: 15px;&quot;&gt;
Bob should NOT be able to login to user@lastingdamage after his certificate is revoked.
&lt;/div&gt;

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/04-bob_revoked_login.png&quot; /&gt; 
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/04-bob_revoked_log.png&quot; /&gt; 
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;5. Identity - expire&lt;/p&gt;

&lt;div style=&quot;padding-left: 15px;&quot;&gt;
Alice should NOT be able to login to user@lastingdamage after her certificate expires. 
&lt;/div&gt;

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/05-alice_expire_login.png&quot; /&gt; 
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/05-alice_expire_log.png&quot; /&gt; 
&lt;/p&gt;

&lt;p&gt;NOTE: The Valid: from to values “ARE” server timezone sensitive!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;6. Network location&lt;/p&gt;

&lt;div style=&quot;padding-left: 15px;&quot;&gt;
Chloe can't ssh to user@lastingdamage from outside 172.18.0.0/24 CIDR, even with valid keys.
&lt;/div&gt;

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/06-chloe_location_login.png&quot; /&gt; 
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/06-chloe_location_log.png&quot; /&gt; 
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;7. Identity - registry&lt;/p&gt;

&lt;div style=&quot;padding-left: 15px;&quot;&gt;
A public_keys/public_key_index.txt file is created with an index of ID's and their PUBLIC keys which have been signed -&amp;gt; used for identifying users when greping auth.log
&lt;/div&gt;

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;/assets/images/07-public_key_index.png&quot; /&gt; 
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;SSH key management is very simple:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;All servers are configured to use CA keys and certificates&lt;/li&gt;
  &lt;li&gt;The user provides their public key, CA signs the key and returns the resulting user certificate and the CA’s public key.&lt;/li&gt;
  &lt;li&gt;The user configures their system and use the CA’s signed certificate.&lt;/li&gt;
  &lt;li&gt;The user keys either expire or are revoked as required.&lt;/li&gt;
  &lt;li&gt;SSH auth.log records all connection activity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You are making “One key to rule them ALL”  but it is a Certificate Authority key that never needs to be on an online system, it could/should reside on a USB key and only plugged in when needed.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References:&lt;/h3&gt;

&lt;p&gt;MAN pages&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/assets/text/man_ssh-copy-id.txt&quot;&gt;man ssh-copy-id&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/assets/text/man_ssh-keygen.txt&quot;&gt;man ssh-keygen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/assets/text/man_ssh.txt&quot;&gt;man ssh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/assets/text/man_sshd.txt&quot;&gt;man sshd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NIST Special Publication 800-57 Recommendation for Key Management - Part 1: General (Revision 3)
&lt;br /&gt;Elaine Barker, William Barker, William Burr, William Polk, and Miles Smid 
&lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-57p1r3.pdf&quot;&gt;https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-57p1r3.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NIST Special Publication 800-207 - Zero Trust Architecture 
&lt;br /&gt;Scott Rose Oliver Borchert Stu Mitchell Sean Connelly 
&lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-207.pdf&quot;&gt;https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-207.pdf&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="research" /><category term="howto" /><category term="ssh" /><summary type="html">Without good key management, no cryptographic system is secure. Full knowledge of the Who, What, When, Where, Why and How of your keys is imperative for good security. Using an SSH Certificate Authority (CA) will vastly simplify and improve the efficacy of SSH infrastructure. You will no longer have default usernames and passwords (root:toor). You will no longer have to copy everyone’s public key into every server while trying to remember whose key is whos. You will no longer be tempted to create “One key to rule them ALL” and give that key to everyone who needs it. Your key management process will be reduced to installing a CA’s public key to each system and signing users public keys.</summary></entry><entry><title type="html">Do you have Squatters?</title><link href="/do-you-have-squatters.html" rel="alternate" type="text/html" title="Do you have Squatters?" /><published>2021-04-25T00:00:00+01:00</published><updated>2021-04-25T00:00:00+01:00</updated><id>/do-you-have-squatters</id><content type="html" xml:base="/do-you-have-squatters.html">&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Typosquatting&quot;&gt;Typosquatting&lt;/a&gt; &lt;sup&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; is the Internets version of occupying empty buildings, without permission “&lt;a href=&quot;https://en.wikipedia.org/wiki/Squatting&quot;&gt;Squatting&lt;/a&gt;“&lt;sup&gt;&lt;a href=&quot;#2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;In this article, we describe a process that can be conducted to determine whether or not you have squatters on your branded domains. It is a manual process and covers the basic forms of typo and TLD squatting. It is intended to be carried out as a “&lt;a href=&quot;https://en.wikipedia.org/wiki/Proof_of_concept&quot;&gt;Proof of Concept&lt;/a&gt;” &lt;sup&gt;&lt;a href=&quot;#3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; to ascertain if you have squatters and whether a more rigorous, automated process would be of value in your broader risk management process.&lt;/p&gt;

&lt;p&gt;The output of this process is a spreadsheet, from which you will be able to gain some basic statistics on “potential” squatting activity and a starting point for further investigatory work.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&quot;methodology&quot;&gt;Methodology&lt;/h2&gt;

&lt;p&gt;You will require:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A domain name [domain]&lt;/li&gt;
  &lt;li&gt;A list of common spelling mistakes of the domain name&lt;/li&gt;
  &lt;li&gt;A list of TLD/ccTLD&lt;/li&gt;
  &lt;li&gt;Linux/OSX terminal and an Internet connection&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will use the Linux/OSX terminal to create and combine the typo and TLD lists into a master list of candidate domain names, then we will use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Dig_(command)&quot;&gt;dig&lt;/a&gt; (domain information groper) &lt;sup&gt;&lt;a href=&quot;#4&quot;&gt;4&lt;/a&gt;,&lt;a href=&quot;#5&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; utility to execute dig &lt;a href=&quot;http://searchnetworking.techtarget.com/definition/start-of-authority-record&quot;&gt;Start of Authority&lt;/a&gt; (SOA) &lt;sup&gt;&lt;a href=&quot;#6&quot;&gt;6&lt;/a&gt;&lt;/sup&gt; queries to determine if the candidate domain has been registered and finish by using grep to gather all results and create a findings spreadsheet.&lt;/p&gt;

&lt;h3 id=&quot;typos&quot;&gt;Typos&lt;/h3&gt;

&lt;p&gt;To create a list of possible typographical mistakes for a given domain name we will use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance&quot;&gt;Damerau–Levenshtein distance&lt;/a&gt; (DL) &lt;sup&gt;&lt;a href=&quot;#7&quot;&gt;7&lt;/a&gt;&lt;/sup&gt; which is the the minimum number of operations; insertions, deletions or substitutions of a single character, and/or the transposition of two adjacent characters required to change one word into another.&lt;/p&gt;

&lt;p&gt;We will use a Damerau–Levenshtein distance of 1, (a single edit) and the UTF8 domain name character set! for example:&lt;/p&gt;

&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&quot;5%&quot; /&gt;
&lt;col width=&quot;10%&quot; /&gt;
&lt;col width=&quot;20%&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;domain&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;charset&lt;/td&gt;
&lt;td&gt;abcdefghijklmnopqrstuvwxyz0123456789-&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;insertion&lt;/td&gt;
&lt;td&gt;adomain daomain domaain ...&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;deletion&lt;/td&gt;
&lt;td&gt; omain dmain doain ...&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;substitution&lt;/td&gt;
&lt;td&gt;aomain bomain comain ...&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;transposition&lt;/td&gt;
&lt;td&gt;odmain dmoain doamin ... (adjacent character transposition)&lt;/td&gt;
&lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; &lt;/p&gt;

&lt;p&gt;To create a file “[DOMAIN]-candidate-domains.txt” containing a list of DL 1 typo’s, cut&amp;amp;paste the following into a terminal, replacing “domain” with the domain name of your choosing, without a TLD/ccTLD appended to the end! For example: if the domain name you wish to test is “google.com”, replace “domain” with “google”&lt;/p&gt;

&lt;h4 id=&quot;insertion&quot;&gt;insertion&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DOMAIN=&quot;domain&quot;; \
OUTPUT=&quot;$DOMAIN-candidate-domains.csv&quot;; \
charset=&quot;abcdefghijklmnopqrstuvwxyz0123456789-&quot;; \
type=&quot;i&quot;; \
read -a CHARS &amp;lt;&amp;lt;&amp;lt;&quot;$(echo $charset | sed 's/./&amp;amp; /g')&quot;; \
for (( x=0; x&amp;lt;=${#DOMAIN}; x++ )); do  \
START=${DOMAIN[@]:0:$x} ; \
END=${DOMAIN[@]:$x:${#DOMAIN}} ; \
for CHAR in &quot;${CHARS[@]}&quot;; do \
echo &quot;$START$CHAR$END,$type&quot; |tee -a $OUTPUT ; \
done; \
done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;deletion&quot;&gt;deletion&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DOMAIN=&quot;domain&quot;; \
OUTPUT=&quot;$DOMAIN-candidate-domains.csv&quot;; \
type=&quot;d&quot;; \
read -a CHARS &amp;lt;&amp;lt;&amp;lt;&quot;$(echo $DOMAIN | sed 's/./&amp;amp; /g')&quot;; \
for (( x=0; x&amp;lt;=${#DOMAIN}-1; x++ )); do  \
s=&quot;&quot;; \
for (( y=0; y&amp;lt;=${#DOMAIN}-1; y++ )); do  \
if [ $x != $y ]; then \
s=$s${CHARS[$y]} ; \
fi; \
done; \
echo &quot;$s,$type&quot; |tee -a $OUTPUT ; \
done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;substitution&quot;&gt;substitution&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DOMAIN=&quot;domain&quot;; \
OUTPUT=&quot;$DOMAIN-candidate-domains.csv&quot;; \
charset=&quot;abcdefghijklmnopqrstuvwxyz0123456789-&quot;; \
type=&quot;s&quot;; \
read -a CHARS &amp;lt;&amp;lt;&amp;lt;&quot;$(echo $charset | sed 's/./&amp;amp; /g')&quot;; \
for (( x=0; x&amp;lt;=${#DOMAIN}-1; x++ )); do  \
START=${DOMAIN[@]:0:$x} ; \
END=${DOMAIN[@]:$x+1:${#DOMAIN}} ; \
for CHAR in &quot;${CHARS[@]}&quot;; do \
echo &quot;$START$CHAR$END,$type&quot; |tee -a $OUTPUT ; \
done; \
done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;transposition&quot;&gt;transposition&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DOMAIN=&quot;domain&quot;; \
OUTPUT=&quot;$DOMAIN-candidate-domains.csv&quot;; \
type=&quot;t&quot;; \
for (( x=0; x&amp;lt;=${#DOMAIN}-2; x++ )); do  \
START=${DOMAIN[@]:0:$x} ; \
MID=${DOMAIN[@]:$x+1:1}${DOMAIN[@]:$x:1} ; \
END=${DOMAIN[@]:$x+2:${#DOMAIN}} ; \
echo &quot;$START$MID$END,$type&quot; |tee -a $OUTPUT ; \
done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open the “[DOMAIN]-candidate-domains.txt” in a text editor and sort/unique the contents. Remove any candidate domain names that start or end with a hyphen they are invalid. For a domain name of “domain”, you should have a file containing 477 variations of “domain” from 0domain to zomain.&lt;/p&gt;

&lt;h3 id=&quot;tldcctld&quot;&gt;TLD/ccTLD&lt;/h3&gt;

&lt;p&gt;You have several choices for creating a list of TLD’s, “[?????]-tlds.txt”. However please be cognisant of the consequences; If you have 477 variations and 10 TLD’s you will be executing 4770 dig queries and creating 4770 files.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;TLD’s by Popularity&lt;/p&gt;

    &lt;p&gt;W3Techs Web Technology Surveys &lt;sup&gt;&lt;a href=&quot;#8&quot;&gt;8&lt;/a&gt;&lt;/sup&gt; maintains a “Usage of top level domains for websites” list&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://w3techs.com/technologies/overview/top_level_domain/all&quot;&gt;https://w3techs.com/technologies/overview/top_level_domain/all&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;top_10_tlds.txt&lt;/p&gt;

    &lt;p&gt;.com .ru .org .net .de .jp .uk .br .it .pl&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TLD’s by Abuse&lt;/p&gt;

    &lt;p&gt;Spamhaus &lt;sup&gt;&lt;a href=&quot;#9&quot;&gt;9&lt;/a&gt;&lt;/sup&gt; maintains many interesting list on spamming activity, the TLDs with the worst reputations for spam operations are:&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://www.spamhaus.org/statistics/tlds/&quot;&gt;https://www.spamhaus.org/statistics/tlds/&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;abused-tlds.txt&lt;/p&gt;

    &lt;p&gt;.biz .click .cricket .gdn .gq .ml .party .review .study .top&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dig&quot;&gt;DIG&lt;/h3&gt;

&lt;p&gt;Once you have your “[DOMAIN]-candidate-domains.txt” and “abused-tlds.txt” files you can cut&amp;amp;paste the following into the terminal. It will loop through both files, executing a dig SOA query for each candidate domain and piping the results into files.&lt;/p&gt;

&lt;p&gt;Note: it will take “some time”! You can CTRL-C at any time to stop it and re-cut&amp;amp;paste later and it will pick-up from where it left off.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DOMAIN=&quot;domain&quot;; \
if [ ! -d $DOMAIN ]; then mkdir $DOMAIN; fi; \
while read TLD; do \
while IFS=, read domain type; do \
CMD=&quot;dig @8.8.4.4 $domain$TLD SOA&quot;; \
OUTPUT=$(echo $CMD |sed 's/ /_/g'); \
if [ ! -f $DOMAIN/$OUTPUT-$type.txt ]; then \
echo &quot;$CMD &amp;gt;$DOMAIN/$OUTPUT-$type.txt&quot;; \
$CMD &amp;gt;$DOMAIN/$OUTPUT-$type.txt; \
fi; \
done &amp;lt; $DOMAIN-candidate-domains.csv; \
done &amp;lt; abused-tlds.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;

&lt;p&gt;To create a “$DOMAIN-domains.csv” file cut&amp;amp;paste the following into the terminal. It will grep each file in the $DOMAIN directory, piping the results into the .csv file. It will also attempt to determine the TLD of the domain and domain of the SOA’s Name Server for ease of sorting and categorising.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DOMAIN=&quot;domain&quot;; \
OUTPUT=&quot;$DOMAIN-domains.csv&quot;; \
if [ -f $OUTPUT ]; then mv -f $OUTPUT $OUTPUT.bak; fi; \
TAB=$'\t' ; \
echo &quot;domain,ttl,net,type,ns,email,serial,refresh,retry,expire,minimum,dl,tld,soadomain&quot; |tee -a $OUTPUT ; \
for FILE in $DOMAIN/dig*.txt; do \
dl=$(echo &quot;$FILE&quot; |cut -d &quot;_&quot; -f 4 |sed &quot;s/SOA-//g&quot; |sed &quot;s/.txt//g&quot;); \
domain=$(echo &quot;$FILE&quot; |cut -d &quot;_&quot; -f 3); \
count=$(echo $domain |grep -o &quot;\.&quot; |wc -l) ; \
if [ $count == 1 ]; then \
tld=$(echo $domain |cut -d &quot;.&quot; -f 2); \
elif [ $count == 2 ]; then \
tld=$(echo $domain |cut -d &quot;.&quot; -f 2,3); \
fi; \
if grep -q &quot;^$domain&quot; $FILE; then \
LINE=$(grep &quot;^$domain&quot; $FILE |sed &quot;s/${TAB}/ /g&quot; |sed &quot;s/  / /g&quot; |sed &quot;s/ /,/g&quot; |tr '[:upper:]' '[:lower:]'); \
soa=$(echo $LINE |cut -d , -f 5); \
COUNT=$(echo $soa |grep -o &quot;\.&quot; |wc -l) ; \
if [ $COUNT == 2 ]; then \
SOADOMAIN=$soa; \
elif [ $COUNT == 3 ]; then \
SOADOMAIN=$(echo $soa |cut -d &quot;.&quot; -f 2,3); \
else \
SOADOMAIN=$(echo $soa |cut -d &quot;.&quot; -f 2,3,4); \
fi; \
echo &quot;$LINE,$dl,$tld,$SOADOMAIN&quot; |tee -a $OUTPUT ; \
else \
echo &quot;$FILE&quot; |cut -d &quot;_&quot; -f 3 |tee -a $OUTPUT ; \
fi; \
done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&quot;findings&quot;&gt;Findings&lt;/h2&gt;

&lt;p&gt;The screenshot below is of the “$DOMAIN-domains.csv” spreadsheet for the “domain” domain and using the top 10 most popular TLD’s and the top 10 most abused TLD’s with the ttl, net, serial, refresh, retry, expire and minimum columns remove and sorted by the soadomain column.&lt;/p&gt;

&lt;table&gt;
    &lt;caption align=&quot;bottom&quot;&gt;
	
		findings spreadsheet
	
&lt;/caption&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/assets/images/do-you-have-squatters-screenshot.png&quot; alt=&quot;findings spreadsheet&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;The spreadsheet contains 9540 entries and has identified 707 potential domain squatters that will require individual investigation to determine if they are true Typosquatting domains or not. However, some general observations can be made on the spreadsheet as a whole:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Domain names that have not been registered, 8833&lt;/li&gt;
  &lt;li&gt;Potential domain squatters that require further investigation, 707&lt;/li&gt;
  &lt;li&gt;Domains that have been registered by &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_parking&quot;&gt;domain parking&lt;/a&gt; &lt;sup&gt;&lt;a href=&quot;#10&quot;&gt;10&lt;/a&gt;&lt;/sup&gt; companies; domaincontrol.com, parkingcrew.net, sedoparking.com and bodis.com etc.&lt;/li&gt;
  &lt;li&gt;Damerau–Levenshtein statistics; insertion 405, deletion 39, substitution 240 and transposition 21&lt;/li&gt;
  &lt;li&gt;TLD’s statistics; com 224, net 115, de 98, ru 77, org 61 etc.&lt;/li&gt;
  &lt;li&gt;SOA domain statistics; domaincontrol.com 59, uniregistrymarket.link 42, sedoparking.com 29, bodis.com 20, freenom.com 14 etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;These terminal snippets are quite rudimentary and could be easily translated into a more functional programming language to improve the process and to make it more robust and repeatable. However, we hope that as a Proof of Concept for finding potential domain name squatters you found it to be of some value and worth undertaking.&lt;/p&gt;

&lt;p&gt;   &lt;/p&gt;
&lt;h3 id=&quot;notes&quot;&gt;Notes&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;1&quot;&gt;&lt;/a&gt;Typosquatting, also called URL hijacking, a sting site, or a fake URL … 
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Typosquatting&quot;&gt;Typosquatting&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 23 May 2017, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;2&quot;&gt;&lt;/a&gt;Squatting is the action of occupying an abandoned or unoccupied area of land or a building …
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Squatting&quot;&gt;Squatting&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 11 June 2017, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;3&quot;&gt;&lt;/a&gt;Proof of Concept (PoC) is a realization of a certain method or idea in order to demonstrate its feasibility …
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Proof_of_concept&quot;&gt;Proof of concept&lt;/a&gt;” 
&lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 11 May 2017, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;4&quot;&gt;&lt;/a&gt;dig (domain information groper) is a network administration command-line tool for querying Domain Name System (DNS) servers … 
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Dig_(command)&quot;&gt;dig (command)&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 7 April 2017, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;5&quot;&gt;&lt;/a&gt;Heinlein, Paul. “&lt;a href=&quot;https://www.madboa.com/geek/dig/&quot;&gt;DiG HOWTO - How to use dig to query DNS name servers.&lt;/a&gt;” &lt;a href=&quot;https://www.madboa.com/&quot;&gt;madboa.com&lt;/a&gt;, 11 May 2006, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;6&quot;&gt;&lt;/a&gt;A start of authority (SOA) record is information stored in a domain name system (DNS) zone about that zone and about other DNS records …
Rouse, Margaret. “&lt;a href=&quot;http://searchnetworking.techtarget.com/definition/start-of-authority-record&quot;&gt;Start of Authority record&lt;/a&gt;” &lt;a href=&quot;http://searchnetworking.techtarget.com/&quot;&gt;SearchNetworking&lt;/a&gt;, April 2007, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;7&quot;&gt;&lt;/a&gt;In information theory and computer science, the Damerau–Levenshtein distance (named after Frederick J. Damerau and Vladimir I. Levenshtein) is a string metric for measuring the edit distance between two sequences …
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance&quot;&gt;Damerau–Levenshtein distance&lt;/a&gt;”
&lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 17 April 2017, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;8&quot;&gt;&lt;/a&gt;“&lt;a href=&quot;https://w3techs.com/technologies/overview/top_level_domain/all&quot;&gt;Usage of top level domains for websites&lt;/a&gt;” 
&lt;a href=&quot;https://w3techs.com&quot;&gt;W3Techs Web Technology Surveys&lt;/a&gt;, 2017, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;9&quot;&gt;&lt;/a&gt; “&lt;a href=&quot;https://www.spamhaus.org/statistics/tlds/&quot;&gt;The 10 Most Abused Top Level Domains&lt;/a&gt;” 
&lt;a href=&quot;https://www.spamhaus.org&quot;&gt;The Spamhaus Project Ltd&lt;/a&gt;, 2017, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a name=&quot;10&quot;&gt;&lt;/a&gt;Domain parking refers to the registration of an internet domain name without that domain being associated with any services such as e-mail or a website …
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_parking&quot;&gt;Domain parking&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 23 May 2017, accessed 1 Jun 2017&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="howto" /><category term="dns" /><summary type="html">Typosquatting 1 is the Internets version of occupying empty buildings, without permission “Squatting“2. In this article, we describe a process that can be conducted to determine whether or not you have squatters on your branded domains. It is a manual process and covers the basic forms of typo and TLD squatting. It is intended to be carried out as a “Proof of Concept” 3 to ascertain if you have squatters and whether a more rigorous, automated process would be of value in your broader risk management process. The output of this process is a spreadsheet, from which you will be able to gain some basic statistics on “potential” squatting activity and a starting point for further investigatory work.</summary></entry><entry><title type="html">.com Doppelgängers</title><link href="/.com-doppelgangers.html" rel="alternate" type="text/html" title=".com Doppelgängers" /><published>2021-03-28T00:00:00+00:00</published><updated>2021-03-28T00:00:00+00:00</updated><id>/.com-doppelgangers</id><content type="html" xml:base="/.com-doppelgangers.html">&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Doppelg%C3%A4nger&quot;&gt;Doppelgänger domain names&lt;/a&gt; &lt;sup&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;/a&gt;,&lt;a href=&quot;#2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; are a subcategory in the larger issue of &lt;a href=&quot;https://en.wikipedia.org/wiki/Typosquatting&quot;&gt;Typosquatting&lt;/a&gt; &lt;sup&gt;&lt;a href=&quot;#3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot;&gt;Domain Name System&lt;/a&gt; (DNS) &lt;sup&gt;&lt;a href=&quot;#4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. A doppelgänger domain is typically correctly spelt but with some manipulation of the dots between host and domain name, for example, www.google.com is different from wwwgoogle.com.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;excerpt&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reasons for registering and running services on doppelgänger domains vary widely with either mischievous or malicious intent. It could be for a lark; to make a political statement; to embarrass or harass, or as part of a broader cyber attack strategy. In all cases, the intent is to re-direct traffic (the web, email etc.) away from the legitimate domain and to the doppelgänger domain.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Regardless of the motivations and intentions of any given doppelgänger, it should be accepted that the Domain Name System allows users to register domain names and that a one character difference between two given domain names makes them both unique and valid within the DNS system. They can then be owned and controlled by two different entities. This technical differentiation does not always sit well with the owner of the original domain, if a doppelgänger domain is being used in “bad faith” or with “malicious intent”. So the &lt;a href=&quot;https://www.icann.org/&quot;&gt;Internet Corporation for Assigned Names and Numbers&lt;/a&gt; (ICANN), created a &lt;a href=&quot;https://www.icann.org/resources/pages/help/dndr/udrp-en&quot;&gt;Uniform Domain-Name Dispute-Resolution Policy&lt;/a&gt; (UDRP) &lt;sup&gt;&lt;a href=&quot;#5&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; process for the resolution of disputes regarding the registration of internet domain names. Having this formal and legally binding process is a good thing. However wouldn’t it be better to avoid getting into a dispute to start with? Wouldn’t it be better to own and control “all” possible look-a-like domains in the first place?&lt;/p&gt;

&lt;p&gt;But registering “all” possible doppelgängers and setting up re-directs to the “real” domain is an impractical and costly strategy: There is currently more than 1,000 top-level domains (TLD) and country code top-level domain (ccTLD), also, in the cases of typosquatting; the larger the number of characters in your domain name the greater the possible number of doppelgänger domains. Which means that many thousands of domains would need to be registered.&lt;/p&gt;

&lt;p&gt;A more realistic and cost-effective strategy would be to only register the most likely and most common doppelgänger domains. Here we investigate the prevalence and control of .com doppelgänger domain names and use the knowledge gained to build a recommended list of .com doppelgänger domains that should be pre-emptively registered.&lt;/p&gt;

&lt;h3 id=&quot;methodology&quot;&gt;Methodology&lt;/h3&gt;

&lt;p&gt;This investigation uses the top 5000 .com domains from the &lt;a href=&quot;http://www.alexa.com/topsites&quot;&gt;Alexa.com&lt;/a&gt; &lt;sup&gt;&lt;a href=&quot;#6&quot;&gt;6&lt;/a&gt;&lt;/sup&gt; daily index of the top one million sites &lt;a href=&quot;http://s3.amazonaws.com/alexa-static/top-1m.csv.zip&quot;&gt;[download link]&lt;/a&gt;. All of these domains support some form of on-line presence, store, webmail, search engine, social network or marketing website. Millions of users visit their websites and contact them via email every day.&lt;/p&gt;

&lt;p&gt;The definition of a Doppelgänger domain was extended beyond just the manipulation of the dot and included some techniques borrowed from typosquatting by prepending www and www- and TLD/ccTLD squatting by replacing the .com TLD with appropriate ccTLDs’ while keeping the primary assumption that the domain names spelling is identical. This provides a larger, more representative sample of the styles of doppelgänger domain names used and generates more extensive and varied results.&lt;/p&gt;

&lt;p&gt;This strategy produced, ten manipulations of the .com TLD with the ccTLD’s .cm, .co, .om and prepends two variations of the optional World Wide Web www protocol identifier, producing 30 candidate doppelgängers for each legitimate domain.&lt;/p&gt;

&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&quot;5%&quot; /&gt;
&lt;col width=&quot;20%&quot; /&gt;
&lt;col width=&quot;5%&quot; /&gt;
&lt;col width=&quot;20%&quot; /&gt;
&lt;col width=&quot;5%&quot; /&gt;
&lt;col width=&quot;20%&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;[domain] .com (real)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;[domain] c.co&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;www [domain] c.co&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;www- [domain] c.co&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;[domain] c.om&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;www [domain] c.om&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;www- [domain] c.om&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;[domain] .co &lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;www [domain] .co&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;www- [domain] .co&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;[domain] .co.om&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;www [domain] .co.om&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;www- [domain] .co.om&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;[domain] .com.co&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;www [domain] .com.co&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;www- [domain] .com.co&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;[domain] .om&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;www [domain] .om&lt;/td&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;www- [domain] .om&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;[domain] .om.co&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;www [domain] .om.co&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;www- [domain] .om.co&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;[domain] .om.com&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;www [domain] .om.com&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;www- [domain] .om.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;[domain] .com.om&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;www [domain] .com.om&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;www- [domain] .com.om&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;[domain] .cm&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;www [domain] .cm&lt;/td&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;www- [domain] .cm&lt;/td&gt;
&lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt; &lt;/p&gt;

&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&quot;10%&quot; /&gt;
&lt;col width=&quot;15%&quot; /&gt;
&lt;col width=&quot;75%&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.cm&lt;/td&gt;
&lt;td&gt;Cameroon &lt;sup&gt;&lt;a href=&quot;#7&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;A local entity/company in Cameroon is required to register a domain name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.co&lt;/td&gt;
&lt;td&gt;Colombia &lt;sup&gt;&lt;a href=&quot;#8&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Marketed as a global domain, anyone can register.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.om&lt;/td&gt;
&lt;td&gt;Oman &lt;sup&gt;&lt;a href=&quot;#9&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Registrant must have company or trademark registered in Oman&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;For this investigation, we used &lt;a href=&quot;https://en.wikipedia.org/wiki/Dig_(command)&quot;&gt;dig&lt;/a&gt; (domain information groper) &lt;sup&gt;&lt;a href=&quot;#10&quot;&gt;10&lt;/a&gt;,&lt;a href=&quot;#11&quot;&gt;11&lt;/a&gt;&lt;/sup&gt; as the primary investigatory tool, and used the value of the domains DNS &lt;a href=&quot;http://searchnetworking.techtarget.com/definition/start-of-authority-record&quot;&gt;Start of Authority&lt;/a&gt; (SOA) &lt;sup&gt;&lt;a href=&quot;#12&quot;&gt;12&lt;/a&gt;&lt;/sup&gt; record as a determiner using the following process and logic:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A “dig @8.8.4.4 [domain].com SOA” query was sent to the legitimate domain to determine the domains DNS SOA server.&lt;/li&gt;
  &lt;li&gt;For each candidate doppelgänger, A “dig @8.8.4.4 * [domain] * SOA” query was sent to determine whether or not the candidate domain is “resolvable” and therefore exists&lt;/li&gt;
  &lt;li&gt;SOA records were compared with that of the “legitimate” domain’s SOA record. If they matched; it inferred that the domain owner has control over that doppelgänger and if they did not; it inferred that the domain owner does not have control over the doppelgänger and that it could therefore be used for nefarious activities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;$ dig @8.8.4.4 google.com SOA&lt;/p&gt;

&lt;table&gt;
    &lt;caption align=&quot;bottom&quot;&gt;
	
		
	
&lt;/caption&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/assets/images/com_doppelgangers_dig_@8.8.4.4_google.com_SOA.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;$ dig @8.8.4.4 googlec.co SOA&lt;/p&gt;

&lt;table&gt;
    &lt;caption align=&quot;bottom&quot;&gt;
	
		
	
&lt;/caption&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/assets/images/com_doppelgangers_dig_@8.8.4.4_googlec.co_SOA.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;In these two examples, the legitimate domain google.com’s declares its SOA as ns1.google.com v.s. the googlec.co domain declares its SOA as elinore.ns.cloudflare.com. So we determine that the doppelgänger googlec.co exists and that google.com is not in control of it.&lt;/p&gt;

&lt;p&gt;Caveat: The assertion of “control” based on the comparison of SOA records does not hold true in all cases! Discerning the “true” owners for each domain would be a long and arduous task and is therefore outside the scope of this investigation. We are making a generalising assumption of control, based on the fact that “most” companies consolidate their DNS services to one set of servers, under one domain and/or one DNS provider. Any that fall outside of this assumption will be outliers and represent a small but extremely hard to define variance in the overall control statistics.&lt;/p&gt;

&lt;h3 id=&quot;findings&quot;&gt;Findings&lt;/h3&gt;

&lt;h4 id=&quot;the-prevalence-of-com-doppelgängers&quot;&gt;The prevalence of .com doppelgängers:&lt;/h4&gt;

&lt;p&gt;dig SOA queries where made for each of the 5000 legitimate .com domains and for each of the 30 candidate doppelgänger domains. Returning a total 9938 SOA records, 5000 for the legitimate domains and 4938 potential doppelgänger domains.&lt;/p&gt;

&lt;table&gt;
    &lt;caption align=&quot;bottom&quot;&gt;
	
		potential doppelgängers
	
&lt;/caption&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/assets/images/com_doppelgangers_potential.png&quot; alt=&quot;potential doppelgängers&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Potential doppelgängers within the .co ccTLD are by far the most prevalent, with a combined total of 4707 (95.32%) of the 4938  found. Whereas the significance of .om 164 (3.32%) and .cm 66 (1.34%) combined pales in comparison. The disparity between them is likely to be due to the registry requirements of the registrars, with a registered company required for the .cm and .om domains versus no registry requirements at all for a .co domain.&lt;/p&gt;

&lt;table&gt;
    &lt;caption align=&quot;bottom&quot;&gt;
	
		.co versus .cm &amp;amp; .om
	
&lt;/caption&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/assets/images/com_doppelgangers_cctld.png&quot; alt=&quot;.co versus .cm &amp;amp; .om&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;No doppelgängers were found for 1631 of the 5000 domains tested, however, 3369 do have one or more doppelgängers. The distribution of the count of doppelgängers per domain tails off sharply once one doppelgänger exists.&lt;/p&gt;

&lt;table&gt;
    &lt;caption align=&quot;bottom&quot;&gt;
	
		doppelgänger counts per domain
	
&lt;/caption&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/assets/images/com_doppelgangers_counts.png&quot; alt=&quot;doppelgänger counts per domain&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h4 id=&quot;the-control-of-com-doppelgängers&quot;&gt;The control of .com doppelgängers:&lt;/h4&gt;

&lt;p&gt;Comparison of the legitimate vs. doppelgänger SOA records, reveals that only very small percentages of doppelgänger domains share the same SOA as their legitimate domain. Which implies that the vast majority of doppelgängers are not controlled by the legitimate domain owners.&lt;/p&gt;

&lt;table&gt;
    &lt;caption align=&quot;bottom&quot;&gt;
	
		control counts
	
&lt;/caption&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/assets/images/com_doppelgangers_control_table.png&quot; alt=&quot;control counts&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Nine of the top ten SOA domains that promulgate and control the DNS entries for the doppelgänger domains are &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_parking&quot;&gt;domain parking&lt;/a&gt; &lt;sup&gt;&lt;a href=&quot;#13&quot;&gt;13&lt;/a&gt;&lt;/sup&gt; and domains for sale businesses. This implies that the doppelgängers have been registered, but are not necessarily in active use.&lt;/p&gt;

&lt;table&gt;
    &lt;caption align=&quot;bottom&quot;&gt;
	
		soa domains
	
&lt;/caption&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/assets/images/com_doppelgangers_soa_domains.png&quot; alt=&quot;soa domains&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;MarkMonitor is a company that provides digital brand protection services, including DNS services, which implies that the legitimate domain owners have engaged with MarkMonitor to register and redirect the doppelgänger domains on their behalf.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Based on a list of the top 5000 .com domains we found that 3369 (67.38%) of them have one or more doppelgänger domain(s) associated with them. We also found that, doppelgängers are prevelant within the .co ccTLD where we found 4707 (95.32%) of all doppelgängers found.&lt;/p&gt;

&lt;p&gt;If you are a .com domain owner, or plan to be; a rational and cost effective strategy for registering and redirecting your doppelgänger domains would be to own at least the top five doppelgänger variants within the .co ccTLD, which would cover off 90% of the most likely potential doppelgängers.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;[your domain] .co&lt;/li&gt;
  &lt;li&gt;[your domain] .com.co&lt;/li&gt;
  &lt;li&gt;www [your domain] .co&lt;/li&gt;
  &lt;li&gt;[your domain] c.co&lt;/li&gt;
  &lt;li&gt;www [your domain] com.co&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;   &lt;/p&gt;

&lt;h3 id=&quot;notes&quot;&gt;Notes&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a name=&quot;1&quot;&gt;&lt;/a&gt;A doppelgänger or doppelga(e)nger is a look-alike or double of a living person … 
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Doppelg%C3%A4nger&quot;&gt;Doppelgänger&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 30 May 2017. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;2&quot;&gt;&lt;/a&gt;A doppelgänger domain is a domain spelled identical to a legitimate fully qualified domain name (FQDN) but missing the dot between host/subdomain and domain, to be used for malicious purposes … 
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Doppelganger_domain&quot;&gt;Doppelganger domain&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 6 March 2017. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;3&quot;&gt;&lt;/a&gt;Typosquatting, also called URL hijacking, a sting site, or a fake URL … 
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Typosquatting&quot;&gt;Typosquatting&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 23 May 2017. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;4&quot;&gt;&lt;/a&gt;The Domain Name System (DNS) is a hierarchical decentralized naming system for computers, services, or other resources connected to the Internet or a private network … 
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot;&gt;Domain Name System&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 5 June 2017. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;5&quot;&gt;&lt;/a&gt;Disputes alleged to arise from abusive registrations of domain names (for example, cybersquatting) may be addressed by expedited administrative proceedings that the holder of trademark rights initiates by filing a complaint with an approved dispute-resolution service provider …
“&lt;a href=&quot;https://www.icann.org/resources/pages/help/dndr/udrp-en&quot;&gt;Uniform Domain-Name Dispute-Resolution Policy&lt;/a&gt;” 
&lt;a href=&quot;https://www.icann.org/&quot;&gt;Internet Corporation For Assigned Names and Numbers&lt;/a&gt;, 2017. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;6&quot;&gt;&lt;/a&gt;Alexa is a global pioneer in the world of analytical insight …
&lt;a href=&quot;http://www.alexa.com/&quot;&gt;Alexa Internet, Inc.&lt;/a&gt;, 2017 . Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;7&quot;&gt;&lt;/a&gt;Delegation Record for .CM “&lt;a href=&quot;https://www.iana.org/domains/root/db/cm.html&quot;&gt;Cameroon&lt;/a&gt;”
&lt;a href=&quot;https://www.icann.org/&quot;&gt;Internet Corporation For Assigned Names and Numbers&lt;/a&gt;, 12 July 2012. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;8&quot;&gt;&lt;/a&gt;Delegation Record for .CO “&lt;a href=&quot;https://www.iana.org/domains/root/db/co.html&quot;&gt;Colombia&lt;/a&gt;”
&lt;a href=&quot;https://www.icann.org/&quot;&gt;Internet Corporation For Assigned Names and Numbers&lt;/a&gt;, 09 March 2017. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;9&quot;&gt;&lt;/a&gt;Delegation Record for .OM “&lt;a href=&quot;https://www.iana.org/domains/root/db/om.html&quot;&gt;Oman&lt;/a&gt;”
&lt;a href=&quot;https://www.icann.org/&quot;&gt;Internet Corporation For Assigned Names and Numbers&lt;/a&gt;, 29 December 2015. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;10&quot;&gt;&lt;/a&gt;dig (domain information groper) is a network administration command-line tool for querying Domain Name System (DNS) servers … 
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Dig_(command)&quot;&gt;dig (command)&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 7 April 2017. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;11&quot;&gt;&lt;/a&gt;Heinlein, Paul. “&lt;a href=&quot;https://www.madboa.com/geek/dig/&quot;&gt;DiG HOWTO - How to use dig to query DNS name servers.&lt;/a&gt;” &lt;a href=&quot;https://www.madboa.com/&quot;&gt;madboa.com&lt;/a&gt;, 11 May 2006. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;12&quot;&gt;&lt;/a&gt;A start of authority (SOA) record is information stored in a domain name system (DNS) zone about that zone and about other DNS records …
Rouse, Margaret. “&lt;a href=&quot;http://searchnetworking.techtarget.com/definition/start-of-authority-record&quot;&gt;Start of Authority record&lt;/a&gt;” &lt;a href=&quot;http://searchnetworking.techtarget.com/&quot;&gt;SearchNetworking&lt;/a&gt;, April 2007. Web 6 Jun 2017&lt;/li&gt;
  &lt;li&gt;&lt;a name=&quot;13&quot;&gt;&lt;/a&gt;Domain parking refers to the registration of an internet domain name without that domain being associated with any services such as e-mail or a website …
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_parking&quot;&gt;Domain parking&lt;/a&gt;” &lt;a href=&quot;https://www.wikimediafoundation.org/&quot;&gt;Wikimedia Foundation, Inc.&lt;/a&gt;, 23 May 2017. Web 6 Jun 2017&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="research" /><category term="dns" /><summary type="html">Doppelgänger domain names 1,2 are a subcategory in the larger issue of Typosquatting 3 in the Domain Name System (DNS) 4. A doppelgänger domain is typically correctly spelt but with some manipulation of the dots between host and domain name, for example, www.google.com is different from wwwgoogle.com. The reasons for registering and running services on doppelgänger domains vary widely with either mischievous or malicious intent. It could be for a lark; to make a political statement; to embarrass or harass, or as part of a broader cyber attack strategy. In all cases, the intent is to re-direct traffic (the web, email etc.) away from the legitimate domain and to the doppelgänger domain.</summary></entry></feed>